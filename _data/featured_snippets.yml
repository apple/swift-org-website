- |
  struct ScientificName: Codable {
      var genus: String
      var species: String
      var subspecies: String?
  }

  let momiji = ScientificName(genus: "Acer", species: "palmatum")
  let jsonData = try JSONEncoder().encode(momiji)

  // {"genus":"Acer","species":"palmatum"}
- |
  struct ScientificName {
      var genus: String
      var species: String
      var subspecies: String?

      var description: String {
          var text = "\(genus) \(species)"
          if let subspecies {
              // subspecies is guaranteed to be non-nil here.
              text += "subsp. \(subspecies)"
          }
          return text
      }
  }
- |
  func squareWave(phase: Float, overtones: UInt) -> Float {
      return (0...overtones)
          .map {
              let harmonic = Float($0 * 2 + 1)
              return sinf(phase * harmonic) / harmonic
          }
          .reduce(0, +)
  }
- |
  let hello = "Hello, world!"
  let multilineString = """
                    @@@         
        @@          @@@@       
      @@  @@@         @@@@@     
      @@@@@@@@@       @@@@@    
        @@@@@@@@@@    @@@@@@   
          @@@@@@@@@@  @@@@@@   
            @@@@@@@@@@@@@@@@@  
  @           @@@@@@@@@@@@@@@  
  @@@@@@        @@@@@@@@@@@@@  
    @@@@@@@@@@@@@@@@@@@@@@@@@@ 
      @@@@@@@@@@@@@@@@@@@@@@@@ 
          @@@@@@@@@@@@@     @ 
                        \(hello)
  """
